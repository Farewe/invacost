% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genericfunctions.R
\name{plot.invacost.rawcost}
\alias{plot.invacost.rawcost}
\title{Plot raw cumulated cost of invasive species over different periods of time}
\usage{
\method{plot}{invacost.rawcost}(
  x,
  plot.breaks = 10^(-15:15),
  plot.type = "points",
  average.annual.values = TRUE,
  cost.transf = "log10",
  graphical.parameters = NULL,
  ...
)
}
\arguments{
\item{x}{The output object from \code{\link{calculateRawAvgCosts}}}

\item{plot.breaks}{aa vector of numeric values indicating the plot breaks 
for the Y axis (cost values)}

\item{plot.type}{\code{"points"} or \code{"bars"}. Defines the type of plot
you want to make; bars are not advised in log scale because the base value (0)
is infinite in log-scale.}

\item{average.annual.values}{if \code{TRUE}, the plot will represent average
annual values rather than cumulative values over the entire period}

\item{cost.transf}{Type of transformation you want to apply on cost values.
Specify \code{NULL} to avoid any transformation. Only useful
for graphical representation.}

\item{graphical.parameters}{set this to \code{"manual"} if you want to 
customise ggplot2 parameters. 
By default, the following layers are configured: ylab, xlab, scale_x_continuous,
theme_bw and, if \code{cost.transf = "log10"}, scale_y_log10 and 
annotation_logticks. If you specify \code{grahical.parameters = "manual"},
all defaults will be ignored.}

\item{...}{additional arguments, none implemented for now}
}
\description{
This function provides different plotting methods for the raw average annual 
cost of invasive species over different periods of time
}
\examples{
data(invacost)
db.over.time <- expandYearlyCosts(invacost,
                                  startcolumn = "Probable_starting_year_low_margin",
                                  endcolumn = "Probable_ending_year_low_margin")
costdb <- db.over.time[db.over.time$Implementation == "Observed", ]
costdb <- costdb[which(costdb$Method_reliability == "High"), ]
res <- calculateRawAvgCosts(costdb)
plot(res)
plot(res, plot.type = "bars")
}
